---
# Variables affecting this role:
#
#  tools:
#    - final_name: the path to the tool to check for
#      completion: look for bash_completion or no
#      completion_file: the name of the bash completion file
#  clusters:
#   just a simple list of clusters to check
#
#  need_rhbk_zip
#  need_rhbk_patch
#  need_rhbk_hotfix
#
#- name: Check for tools
#  file:
#    path: "{{ tools[item].final_name }}"
#    state: file
#  loop: "{{ tools.keys() | list }}"

#- name: Check for completion files
#  file:
#    path: /etc/bash_completion.d/{{ tools[item].completion_file }}
#    state: file
#  when: tools[item].completion
#  loop: "{{ tools.keys() | list }}"

- name: Make sure kubeconfig is there on utility
  delegate_to: utility.lab.example.com
  file:
    path: /home/lab/{{ item }}/auth/kubeconfig
    state: file
  loop: "{{ clusters }}"

- name: Create a temp dir
  file:
    path: tmp
    state: directory

- name: Copy over the kubeconfig
  delegate_to: utility.lab.example.com
  fetch:
    src: /home/lab/{{ item }}/auth/kubeconfig
    dest: tmp/kubeconfig-{{ item }}
    flat: yes
  loop: "{{ clusters }}"

- name: "We need python-kubernetes >= 12"
  become: yes
  pip:
    name: kubernetes>=26.1.0

# XXX This won't do if you install it using pip.
- name: We also need python3-jmespath
  become: yes
  package:
    name: python3.11-jmespath
    state: latest

- name: Verify cluster connectivity
  kubernetes.core.k8s_cluster_info:
    kubeconfig: tmp/kubeconfig-{{ item }}
    validate_certs: no
  loop: "{{ clusters }}"

# TODO: change zip names
- name: Check RHBK ZIP is there
  stat:
    path: "{{ ansible_facts['user_dir'] }}/Downloads/rhbk-{{ rhbk_z }}.zip"
  register: rhbk_zip
  when: need_rhbk_zip|bool

- assert:
    that: rhbk_zip.stat.exists
    fail_msg: "ERROR: RHBK ZIP not downloaded! Please go to section 'Before You Begin' in your book."
    success_msg: "OK: Found RHBK ZIP file."
  when: need_rhbk_zip|bool

- name: Check RHBK patch is there
  stat:
    path: "{{ ansible_facts['user_dir'] }}/Downloads/rhbk-{{ rhbk_p }}-patch.zip"
  register: rhbk_patch
  when: need_rhbk_zip|bool and need_rhbk_patch|bool

- name: Check RHBK hotfix is there
  stat:
    path: "{{ ansible_facts['user_dir'] }}/Downloads/rhbk-{{ rhbk_f }}.zip"
  register: rhbk_hotfix
  when: need_rhbk_zip|bool and need_rhbk_hotfix|bool

- assert:
    that: rhbk_zip.stat.exists
    fail_msg: "ERROR: RHBK ZIP not downloaded! Please go to section 'Before You Begin' in your book."
    success_msg: "OK: Found RHBK ZIP file."
  when: need_rhbk_zip|bool

- assert:
    that: rhbk_patch.stat.exists
    fail_msg: "ERROR: RHBK patch not downloaded! Please go to section 'Before You Begin' in your book."
    success_msg: "OK: Found RHBK patch file."
  when: need_rhbk_zip|bool and need_rhbk_patch|bool

- assert:
    that: rhbk_hotfix.stat.exists
    fail_msg: "ERROR: RHBK hotfix not downloaded! Please go to section 'Before You Begin' in your book."
    success_msg: "OK: Found RHBK hotfix file."
  when: need_rhbk_zip|bool and need_rhbk_hotfix|bool
...
